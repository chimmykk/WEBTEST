import { ApiModule, MoralisCore } from '@moralisweb3/core';
import { RequestMessageOptions } from './methods/requestMessage';
import { VerifyOptions } from './methods/verify';
export declare const BASE_URL = "https://auth-api.do-prod-1.moralis.io";
export declare class MoralisAuth extends ApiModule {
    static readonly moduleName = "auth";
    static create(core?: MoralisCore): MoralisAuth;
    private constructor();
    setup(): void;
    start(): void;
    requestMessage: (options: RequestMessageOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
        id: string;
        message: string;
        profileId: string;
    }, {
        id: string;
        message: string;
        profileId: string;
    }, {
        id: string;
        message: string;
        profileId: string;
    }, {
        domain: string;
        chainId: number;
        address: string;
        statement?: string | undefined;
        uri: string;
        expirationTime?: string | undefined;
        notBefore?: string | undefined;
        resources?: string[] | undefined;
        timeout: number;
    }>>;
    verify: (options: VerifyOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
        id: string;
        domain: string;
        chainId: number;
        address: string;
        statement?: string | undefined;
        uri: string;
        expirationTime?: string | undefined;
        notBefore?: string | undefined;
        resources?: string[] | undefined;
        version: string;
        nonce: string;
        profileId: string;
    }, {
        chain: import("@moralisweb3/evm-utils").EvmChain;
        address: import("@moralisweb3/evm-utils").EvmAddress;
        expirationTime: Date;
        id: string;
        domain: string;
        statement?: string | undefined;
        uri: string;
        notBefore?: string | undefined;
        resources?: string[] | undefined;
        version: string;
        nonce: string;
        profileId: string;
    }, {
        chain: string | number;
        address: string;
        expirationTime: import("@moralisweb3/core").Camelize<Date>;
        id: string;
        domain: string;
        statement?: string | undefined;
        uri: string;
        notBefore?: string | undefined;
        resources?: string[] | undefined;
        version: string;
        nonce: string;
        profileId: string;
    }, {
        message: string;
        signature: string;
    }>>;
}
//# sourceMappingURL=MoralisAuth.d.ts.map