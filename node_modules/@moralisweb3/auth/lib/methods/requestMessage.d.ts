import MoralisCore from '@moralisweb3/core';
import { EvmAddressish, EvmChainish } from '@moralisweb3/evm-utils';
export declare enum AuthNetwork {
    EVM = "evm"
}
export interface RequestMessageEvmOptions {
    network: 'evm';
    domain: string;
    chain: EvmChainish;
    address: EvmAddressish;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string;
    notBefore?: string;
    resources?: string[] | undefined;
    timeout: number;
}
export declare type RequestMessageOptions = RequestMessageEvmOptions;
export declare const makeRequestMessage: (core: MoralisCore) => (options: RequestMessageOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    id: string;
    message: string;
    profileId: string;
}, {
    id: string;
    message: string;
    profileId: string;
}, {
    id: string;
    message: string;
    profileId: string;
}, {
    domain: string;
    chainId: number;
    address: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    timeout: number;
}>>;
//# sourceMappingURL=requestMessage.d.ts.map