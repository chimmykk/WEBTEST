import MoralisCore from '@moralisweb3/core';
export interface VerifyEvmOptions {
    message: string;
    signature: string;
    network: 'evm';
}
export declare type VerifyOptions = VerifyEvmOptions;
export declare const makeVerify: (core: MoralisCore) => (options: VerifyOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    id: string;
    domain: string;
    chainId: number;
    address: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    chain: import("@moralisweb3/evm-utils").EvmChain;
    address: import("@moralisweb3/evm-utils").EvmAddress;
    expirationTime: Date;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    chain: string | number;
    address: string;
    expirationTime: import("@moralisweb3/core").Camelize<Date>;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    message: string;
    signature: string;
}>>;
//# sourceMappingURL=verify.d.ts.map