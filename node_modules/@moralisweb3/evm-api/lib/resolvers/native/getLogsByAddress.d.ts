import { PaginatedParams } from '@moralisweb3/api-utils';
import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmAddressish, EvmTransactionLog } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getLogsByAddress';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'address'>>, PaginatedParams {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare const getLogsByAddress: import("@moralisweb3/api-utils").PaginatedEndpointFactory<ApiParams, Params, {
    transaction_hash: string;
    address: string;
    block_timestamp: string;
    block_number: string;
    block_hash: string;
    data: string;
    topic0: string;
    topic1: string;
    topic2: string;
    topic3: string;
}[] | undefined, EvmTransactionLog[], {
    address: string;
    logIndex?: number | undefined;
    transactionHash: string;
    transactionIndex?: number | undefined;
    data: string;
    topics: string[];
    blockHash: string;
    blockNumber: number;
    blockTimestamp?: string | undefined;
}[]>;
export {};
//# sourceMappingURL=getLogsByAddress.d.ts.map