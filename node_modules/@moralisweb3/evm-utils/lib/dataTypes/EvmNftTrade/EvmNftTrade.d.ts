import { MoralisDataObject } from '@moralisweb3/core';
import { EvmNftTradeInput, EvmNftTradeData } from './types';
export declare type EvmNftTradeish = EvmNftTradeInput | EvmNftTrade;
export declare class EvmNftTrade implements MoralisDataObject {
    private _data;
    constructor(data: EvmNftTradeInput);
    static parse: (data: EvmNftTradeInput) => EvmNftTradeData;
    static create(data: EvmNftTradeish): EvmNftTrade;
    static equals(dataA: EvmNftTradeish, dataB: EvmNftTradeish): boolean;
    equals(data: EvmNftTradeish): boolean;
    toJSON(): {
        chain: string | number;
        sellerAddress: string;
        buyerAddress: string;
        marketplaceAddress: string;
        tokenAddress: string;
        priceTokenAddress: string | undefined;
        blockNumber: string;
        price: string;
        transactionHash: string;
        transactionIndex: number;
        tokenIds: string[];
        blockTimestamp: import("@moralisweb3/core").DateInput;
        blockHash: string;
    };
    format(): {
        chain: string | number;
        sellerAddress: string;
        buyerAddress: string;
        marketplaceAddress: string;
        tokenAddress: string;
        priceTokenAddress: string | undefined;
        blockNumber: string;
        price: string;
        transactionHash: string;
        transactionIndex: number;
        tokenIds: string[];
        blockTimestamp: import("@moralisweb3/core").DateInput;
        blockHash: string;
    };
    get result(): EvmNftTradeData;
}
//# sourceMappingURL=EvmNftTrade.d.ts.map