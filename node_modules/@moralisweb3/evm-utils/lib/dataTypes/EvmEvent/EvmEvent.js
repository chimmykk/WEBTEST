"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvmEvent = void 0;
var core_1 = require("@moralisweb3/core");
var EvmAddress_1 = require("../EvmAddress");
var EvmChain_1 = require("../EvmChain");
var EvmNative_1 = require("../EvmNative");
var EvmEvent = /** @class */ (function () {
    function EvmEvent(data) {
        this._data = EvmEvent.parse(data);
    }
    EvmEvent.create = function (data) {
        if (data instanceof EvmEvent) {
            return data;
        }
        return new EvmEvent(data);
    };
    EvmEvent.equals = function (dataA, dataB) {
        var eventA = EvmEvent.create(dataA);
        var eventB = EvmEvent.create(dataB);
        if (!eventA._data.chain.equals(eventB._data.chain)) {
            return false;
        }
        if (!eventA._data.blockNumber.equals(eventB._data.blockNumber)) {
            return false;
        }
        if (!eventA._data.address.equals(eventB._data.address)) {
            return false;
        }
        if (eventA._data.data !== eventB._data.data) {
            return false;
        }
        return true;
    };
    EvmEvent.prototype.equals = function (data) {
        return EvmEvent.equals(this, data);
    };
    EvmEvent.prototype.toJSON = function () {
        var data = this._data;
        return __assign(__assign({}, data), { chain: data.chain.format(), address: data.address.format(), blockNumber: data.blockNumber.toString(), data: {
                from: data.data.from.format(),
                to: data.data.to.format(),
                value: data.data.value.format(),
            } });
    };
    EvmEvent.prototype.format = function () {
        return this.toJSON();
    };
    Object.defineProperty(EvmEvent.prototype, "result", {
        get: function () {
            return this._data;
        },
        enumerable: false,
        configurable: true
    });
    EvmEvent.parse = function (data) { return (__assign(__assign({}, data), { chain: EvmChain_1.EvmChain.create(data.chain), address: EvmAddress_1.EvmAddress.create(data.address), blockNumber: core_1.BigNumber.create(data.blockNumber), blockTimestamp: (0, core_1.dateInputToDate)(data.blockTimestamp), data: {
            from: (0, core_1.maybe)(data.data.from, EvmAddress_1.EvmAddress.create),
            to: (0, core_1.maybe)(data.data.to, EvmAddress_1.EvmAddress.create),
            value: (0, core_1.maybe)(data.data.value, EvmNative_1.EvmNative.create),
        } })); };
    return EvmEvent;
}());
exports.EvmEvent = EvmEvent;
//# sourceMappingURL=EvmEvent.js.map