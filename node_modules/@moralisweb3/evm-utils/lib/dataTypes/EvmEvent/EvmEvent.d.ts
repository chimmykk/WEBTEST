import { MoralisDataObject } from '@moralisweb3/core';
import { EvmEventInput, EvmEventData } from './types';
export declare type EvmEventish = EvmEventInput | EvmEvent;
export declare class EvmEvent implements MoralisDataObject {
    private _data;
    constructor(data: EvmEventInput);
    static parse: (data: EvmEventInput) => EvmEventData;
    static create(data: EvmEventish): EvmEvent;
    static equals(dataA: EvmEventish, dataB: EvmEventish): boolean;
    equals(data: EvmEventish): boolean;
    toJSON(): {
        chain: string | number;
        address: string;
        blockNumber: string;
        data: {
            from: string;
            to: string;
            value: string;
        };
        transactionHash: string;
        blockTimestamp: Date;
        blockHash: string;
    };
    format(): {
        chain: string | number;
        address: string;
        blockNumber: string;
        data: {
            from: string;
            to: string;
            value: string;
        };
        transactionHash: string;
        blockTimestamp: Date;
        blockHash: string;
    };
    get result(): EvmEventData;
}
//# sourceMappingURL=EvmEvent.d.ts.map