import { MoralisCore, EvmAddressFormat, Config, MoralisData } from '@moralisweb3/core';
export declare type InputEvmAddress = string;
export declare type EvmAddressish = EvmAddress | InputEvmAddress;
/**
 * The EvmAddress class is a MoralisData that references to a EVM address
 * A new instance can be created via `EvmAddress.create(address)`, where the provided chain can be a valid address (in lowercase or checksum)
 */
export declare class EvmAddress implements MoralisData {
    private readonly config;
    static create(address: EvmAddressish, core?: MoralisCore): EvmAddress;
    private _value;
    static get ZERO_ADDRESS(): EvmAddress;
    constructor(address: InputEvmAddress, config: Config);
    /**
     * Parse the input to a value that is compatible with the internal _value
     */
    static parse(address: InputEvmAddress): string;
    get checksum(): string;
    get lowercase(): string;
    static equals(addressA: EvmAddressish, addressB: EvmAddressish): boolean;
    equals(address: EvmAddressish): boolean;
    format(_formatStyle?: EvmAddressFormat): string;
}
//# sourceMappingURL=EvmAddress.d.ts.map