import { EvmChainish } from './EvmChainish';
import { EvmChainIdFormat, MoralisData, MoralisCore, EvmChainable } from '@moralisweb3/core';
/**
 * The EvmChain class is a MoralisData that references to a EVM chain
 * A new instance can be created via `EvmChain.create(chain)`, where the provided chain can be a valid chain number (1),
 * hex-string ("0x1"), or any suppored ChainName
 */
export declare class EvmChain implements MoralisData, EvmChainable {
    private readonly config;
    static create(chain: EvmChainish, core?: MoralisCore): EvmChain;
    static get ETHEREUM(): EvmChain;
    static get ROPSTEN(): EvmChain;
    static get RINKEBY(): EvmChain;
    static get GOERLI(): EvmChain;
    static get KOVAN(): EvmChain;
    static get POLYGON(): EvmChain;
    static get MUMBAI(): EvmChain;
    static get BSC(): EvmChain;
    static get BSC_TESTNET(): EvmChain;
    static get AVALANCHE(): EvmChain;
    static get FUJI(): EvmChain;
    static get FANTOM(): EvmChain;
    static get CRONOS(): EvmChain;
    static get CRONOS_TESTNET(): EvmChain;
    private _value;
    private _chainlistData;
    private constructor();
    /**
     * Getter to return _chainlistData and throws an error if it is not defined
     */
    private _getChainlistData;
    /**
     * Returns the decimal representation of the chain
     */
    get decimal(): number;
    /**
     * Returns the hex-string representation of the chain
     */
    get hex(): string;
    /**
     * Validate and cast to api compatible hex
     */
    get apiHex(): "0x1" | "0x3" | "0x4" | "0x5" | "0x2a" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "cronos" | "0x19";
    /**
     * Compares if 2 chains are equal, based on the chainId
     */
    static equals(chainA: EvmChainish, chainB: EvmChainish): boolean;
    /**
     * Compares if the current chain is equal to the provided chain, based on the chainId
     */
    equals(chain: EvmChainish): boolean;
    /**
     * Formats the chain to the given output; in decimal value or as hex-string.
     * The default formatting can be set in MoralisConfig
     */
    format(_formatStyle?: EvmChainIdFormat): string | number;
    display(): string;
    get name(): string | undefined;
    get currency(): import("../../data/chaindata").EvmNativeCurrency | undefined;
    get rpcUrls(): string[] | undefined;
    get explorer(): {
        name: string;
        url: string;
        standard: "EIP3091" | "none";
        icon?: string | undefined;
    } | null;
    getExplorerPath(value: {
        block: string;
    } | {
        transaction: string;
    } | {
        account: string;
    } | {
        erc20: string;
    }): string | null;
}
//# sourceMappingURL=EvmChain.d.ts.map