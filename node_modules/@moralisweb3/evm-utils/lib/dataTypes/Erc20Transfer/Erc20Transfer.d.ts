import { MoralisDataObject, BigNumber } from '@moralisweb3/core';
import { EvmAddress } from '../EvmAddress';
import { EvmChain } from '../EvmChain';
import { Erc20TransferInput, Erc20TransferData } from './types';
export declare type Erc20Transferish = Erc20TransferInput | Erc20Transfer;
export declare class Erc20Transfer implements MoralisDataObject {
    private _data;
    constructor(data: Erc20TransferInput);
    static parse: (data: Erc20TransferInput) => Erc20TransferData;
    get address(): EvmAddress;
    get blockHash(): string;
    get blockNumber(): BigNumber;
    get blockTimestamp(): Date;
    get chain(): EvmChain;
    get fromAddress(): EvmAddress;
    get toAddress(): EvmAddress;
    get transactionHash(): string;
    get value(): BigNumber;
    static create(data: Erc20Transferish): Erc20Transfer;
    static equals(dataA: Erc20Transferish, dataB: Erc20Transferish): boolean;
    equals(data: Erc20Transferish): boolean;
    toJSON(): {
        chain: string | number;
        address: string;
        blockNumber: string;
        toAddress: string;
        fromAddress: string;
        value: string;
        transactionHash: string;
        blockTimestamp: Date;
        blockHash: string;
    };
    format(): {
        chain: string | number;
        address: string;
        blockNumber: string;
        toAddress: string;
        fromAddress: string;
        value: string;
        transactionHash: string;
        blockTimestamp: Date;
        blockHash: string;
    };
    get result(): Erc20TransferData;
}
//# sourceMappingURL=Erc20Transfer.d.ts.map