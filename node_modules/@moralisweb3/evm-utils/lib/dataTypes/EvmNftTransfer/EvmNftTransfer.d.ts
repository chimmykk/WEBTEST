import { MoralisDataObject } from '@moralisweb3/core';
import { EvmNftTransferInput, EvmNftTransferData } from './types';
export declare type EvmNftTransferish = EvmNftTransferInput | EvmNftTransfer;
export declare class EvmNftTransfer implements MoralisDataObject {
    private _data;
    constructor(data: EvmNftTransferInput);
    static parse: (data: EvmNftTransferInput) => EvmNftTransferData;
    static create(data: EvmNftTransferish): EvmNftTransfer;
    static equals(dataA: EvmNftTransferish, dataB: EvmNftTransferish): boolean;
    equals(data: EvmNftTransferish): boolean;
    toJSON(): {
        chain: string | number;
        blockNumber: string;
        fromAddress: string | undefined;
        toAddress: string;
        tokenAddress: string;
        value: string | undefined;
        operator: string | undefined;
        amount?: number | undefined;
        blockHash: string;
        blockTimestamp: Date;
        contractType: string;
        logIndex: number;
        tokenId: string;
        transactionHash: string;
        transactionIndex?: number | undefined;
        transactionType?: string | undefined;
    };
    format(): {
        chain: string | number;
        blockNumber: string;
        fromAddress: string | undefined;
        toAddress: string;
        tokenAddress: string;
        value: string | undefined;
        operator: string | undefined;
        amount?: number | undefined;
        blockHash: string;
        blockTimestamp: Date;
        contractType: string;
        logIndex: number;
        tokenId: string;
        transactionHash: string;
        transactionIndex?: number | undefined;
        transactionType?: string | undefined;
    };
    get result(): EvmNftTransferData;
}
//# sourceMappingURL=EvmNftTransfer.d.ts.map