import { BigNumber, BigNumberish, MoralisData } from '@moralisweb3/core';
export declare type EvmNativeUnit = 'ether' | 'finney' | 'szabo' | 'gwei' | 'mwei' | 'kwei' | 'wei';
declare type UnitOrDecimals = EvmNativeUnit | number;
export declare type InputEvmNative = BigNumberish;
export declare type EvmNativeish = InputEvmNative | EvmNative;
/**
 * The EvmNative class is a MoralisData that references to a the value of a native currency (like ETH, BNB etc.)
 */
export declare class EvmNative implements MoralisData {
    private readonly rawValue;
    static get ONE_ETH(): EvmNative;
    static get ONE_GWEI(): EvmNative;
    static get ONE_WEI(): EvmNative;
    private constructor();
    static create(native: EvmNativeish, unit?: UnitOrDecimals): EvmNative;
    private static parse;
    static equals(valueA: EvmNativeish, valueB: EvmNativeish): boolean;
    equals(value: EvmNative): boolean;
    get value(): BigNumber;
    get wei(): string;
    get gwei(): string;
    get ether(): string;
    toString(): string;
    format(): string;
}
export {};
//# sourceMappingURL=EvmNative.d.ts.map