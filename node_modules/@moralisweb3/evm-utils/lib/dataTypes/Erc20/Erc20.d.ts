import { MoralisDataObject } from '@moralisweb3/core';
import { EvmAddress } from '../EvmAddress';
import { EvmChain } from '../EvmChain';
import { Erc20Input, Erc20Data } from './types';
export declare type Erc20Tokenish = Erc20Input | Erc20Token;
/**
 * The Erc20Token class is a MoralisData that references to a Erc20 Token
 * It holds data about the data and metadata of an Erc20 token
 */
export declare class Erc20Token implements MoralisDataObject {
    private _value;
    constructor(value: Erc20Input);
    static parse: (value: Erc20Input) => Erc20Data;
    static create(value: Erc20Tokenish): Erc20Token;
    static equals(valueA: Erc20Tokenish, valueB: Erc20Tokenish): boolean;
    get decimals(): number;
    get name(): string;
    get symbol(): string;
    get contractAddress(): EvmAddress;
    get chain(): EvmChain;
    get logo(): string | null | undefined;
    get logoHash(): string | null | undefined;
    get thumbnail(): string | null | undefined;
    equals(value: Erc20Tokenish): boolean;
    toJSON(): {
        contractAddress: string;
        chain: string | number;
        decimals: number;
        name: string;
        symbol: string;
        logo?: string | null | undefined;
        logoHash?: string | null | undefined;
        thumbnail?: string | null | undefined;
    };
    format(): {
        contractAddress: string;
        chain: string | number;
        decimals: number;
        name: string;
        symbol: string;
        logo?: string | null | undefined;
        logoHash?: string | null | undefined;
        thumbnail?: string | null | undefined;
    };
    get result(): Erc20Data;
}
//# sourceMappingURL=Erc20.d.ts.map