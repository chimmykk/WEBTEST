import { MoralisDataObject } from '@moralisweb3/core';
import { EvmTransacionInput, EvmTransactionData } from './types';
export declare type EvmTransactionish = EvmTransacionInput | EvmTransaction;
export declare class EvmTransaction implements MoralisDataObject {
    private _data;
    constructor(data: EvmTransacionInput);
    static parse: (data: EvmTransacionInput) => EvmTransactionData;
    static create(data: EvmTransactionish): EvmTransaction;
    static equals(dataA: EvmTransactionish, dataB: EvmTransactionish): boolean;
    equals(data: EvmTransactionish): boolean;
    toJSON(): {
        to: string | undefined;
        from: string;
        nonce: string | undefined;
        gas: string | undefined;
        gasPrice: string;
        gasUsed: string;
        cumulativeGasUsed: string;
        blockNumber: string;
        value: string | undefined;
        chain: string | number;
        contractAddress: string | undefined;
        logs: {
            address: string;
            logIndex?: number | undefined;
            transactionHash: string;
            transactionIndex?: number | undefined;
            data: string;
            topics: string[];
            blockHash: string;
            blockNumber: number;
            blockTimestamp?: string | undefined;
        }[];
        data?: string | undefined;
        hash: string;
        type?: number | undefined;
        index: number;
        blockHash: string;
        blockTimestamp: Date;
        receiptRoot?: string | undefined;
        receiptStatus?: number | undefined;
    };
    format(): {
        to: string | undefined;
        from: string;
        nonce: string | undefined;
        gas: string | undefined;
        gasPrice: string;
        gasUsed: string;
        cumulativeGasUsed: string;
        blockNumber: string;
        value: string | undefined;
        chain: string | number;
        contractAddress: string | undefined;
        logs: {
            address: string;
            logIndex?: number | undefined;
            transactionHash: string;
            transactionIndex?: number | undefined;
            data: string;
            topics: string[];
            blockHash: string;
            blockNumber: number;
            blockTimestamp?: string | undefined;
        }[];
        data?: string | undefined;
        hash: string;
        type?: number | undefined;
        index: number;
        blockHash: string;
        blockTimestamp: Date;
        receiptRoot?: string | undefined;
        receiptStatus?: number | undefined;
    };
    get result(): EvmTransactionData;
}
//# sourceMappingURL=EvmTransaction.d.ts.map