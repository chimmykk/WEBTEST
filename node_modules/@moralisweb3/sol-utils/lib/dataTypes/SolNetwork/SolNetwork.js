"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolNetwork = void 0;
var core_1 = require("@moralisweb3/core");
var solNetworkNames = ['mainnet', 'devnet'];
var SolNetwork = /** @class */ (function () {
    function SolNetwork(network) {
        this.network = network;
    }
    SolNetwork.create = function (network) {
        return network instanceof SolNetwork ? network : new SolNetwork(SolNetwork.parse(network));
    };
    SolNetwork.parse = function (network) {
        if (typeof network === 'string') {
            if (!solNetworkNames.includes(network)) {
                throw new core_1.MoralisCoreError({
                    code: core_1.CoreErrorCode.INVALID_ARGUMENT,
                    message: "Solana network is not supported: ".concat(network),
                });
            }
        }
        return network;
    };
    SolNetwork.prototype.format = function () {
        // TODO: add `format` argument
        return this.network;
    };
    SolNetwork.prototype.equals = function (network) {
        return this.network === network.network;
    };
    SolNetwork.prototype.toJSON = function () {
        return this.network;
    };
    SolNetwork.prototype.toString = function () {
        return this.network;
    };
    return SolNetwork;
}());
exports.SolNetwork = SolNetwork;
//# sourceMappingURL=SolNetwork.js.map